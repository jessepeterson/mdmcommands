// Code generated by "admgencmd"; DO NOT EDIT.
// Sources: remotedesktop.enable.yaml, remotedesktop.disable.yaml
// Options: no-shared=true
package mdmcommands

import "fmt"

const EnableRemoteDesktopRequestType = "EnableRemoteDesktop"

// EnableRemoteDesktopCommand is the top-level structure for the "EnableRemoteDesktop" Apple MDM command.
type EnableRemoteDesktopCommand struct {
	Command     GenericCommandPayload
	CommandUUID string
}

// GenericCommand creates a new generic command using the values of c.
func (c *EnableRemoteDesktopCommand) GenericCommand() *GenericCommand {
	cmd := NewGenericCommand(c.Command.RequestType)
	cmd.CommandUUID = c.CommandUUID
	cmd.Command.RequestRequiresNetworkTether = c.Command.RequestRequiresNetworkTether
	return cmd
}

// NewEnableRemoteDesktopCommand creates a new "EnableRemoteDesktop" Apple MDM command.
func NewEnableRemoteDesktopCommand(uuid string) *EnableRemoteDesktopCommand {
	return &EnableRemoteDesktopCommand{
		Command:     GenericCommandPayload{RequestType: EnableRemoteDesktopRequestType},
		CommandUUID: uuid,
	}
}

func init() {
	// associate our Request Type to a function for creating a command of that type
	newCommandFuncs[EnableRemoteDesktopRequestType] = func(uuid string) interface{} {
		return NewEnableRemoteDesktopCommand(uuid)
	}
}

// EnableRemoteDesktopResponse is the command result report (response) for the "EnableRemoteDesktop" Apple MDM command.
type EnableRemoteDesktopResponse struct {
	GenericResponse
}

// Validate checks for any command response errors.
func (r *EnableRemoteDesktopResponse) Validate() error {
	if r.ErrorChain != nil || (r.Status != "Acknowledged" && r.Status != "Idle" && r.Status != "NotNow") {
		return fmt.Errorf("MDM error for status %s: %w", r.Status, r.ErrorChain)
	}
	return nil
}

// GetGenericResponse creates a new generic command response using the values of r.
func (r *EnableRemoteDesktopResponse) GetGenericResponse() *GenericResponse {
	return &r.GenericResponse
}

func init() {
	// associate our Request Type to a function for creating a response of that type
	newResponseFuncs[EnableRemoteDesktopRequestType] = func() interface{} {
		return new(EnableRemoteDesktopResponse)
	}
}

const DisableRemoteDesktopRequestType = "DisableRemoteDesktop"

// DisableRemoteDesktopCommand is the top-level structure for the "DisableRemoteDesktop" Apple MDM command.
type DisableRemoteDesktopCommand struct {
	Command     GenericCommandPayload
	CommandUUID string
}

// GenericCommand creates a new generic command using the values of c.
func (c *DisableRemoteDesktopCommand) GenericCommand() *GenericCommand {
	cmd := NewGenericCommand(c.Command.RequestType)
	cmd.CommandUUID = c.CommandUUID
	cmd.Command.RequestRequiresNetworkTether = c.Command.RequestRequiresNetworkTether
	return cmd
}

// NewDisableRemoteDesktopCommand creates a new "DisableRemoteDesktop" Apple MDM command.
func NewDisableRemoteDesktopCommand(uuid string) *DisableRemoteDesktopCommand {
	return &DisableRemoteDesktopCommand{
		Command:     GenericCommandPayload{RequestType: DisableRemoteDesktopRequestType},
		CommandUUID: uuid,
	}
}

func init() {
	// associate our Request Type to a function for creating a command of that type
	newCommandFuncs[DisableRemoteDesktopRequestType] = func(uuid string) interface{} {
		return NewDisableRemoteDesktopCommand(uuid)
	}
}

// DisableRemoteDesktopResponse is the command result report (response) for the "DisableRemoteDesktop" Apple MDM command.
type DisableRemoteDesktopResponse struct {
	GenericResponse
}

// Validate checks for any command response errors.
func (r *DisableRemoteDesktopResponse) Validate() error {
	if r.ErrorChain != nil || (r.Status != "Acknowledged" && r.Status != "Idle" && r.Status != "NotNow") {
		return fmt.Errorf("MDM error for status %s: %w", r.Status, r.ErrorChain)
	}
	return nil
}

// GetGenericResponse creates a new generic command response using the values of r.
func (r *DisableRemoteDesktopResponse) GetGenericResponse() *GenericResponse {
	return &r.GenericResponse
}

func init() {
	// associate our Request Type to a function for creating a response of that type
	newResponseFuncs[DisableRemoteDesktopRequestType] = func() interface{} {
		return new(DisableRemoteDesktopResponse)
	}
}
