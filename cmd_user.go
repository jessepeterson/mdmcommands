// Code generated by "admgencmd"; DO NOT EDIT.
// Sources: user.delete.yaml, user.list.yaml, user.logout.yaml, user.unlock.yaml, set.auto.admin.password.yaml, account.configuration.yaml
// Options: no-shared=true
package mdmcommands

const DeleteUserRequestType = "DeleteUser"

// DeleteUserPayload is the "inner" command-specific payload for the "DeleteUser" Apple MDM command.
type DeleteUserPayload struct {
	UserName                     string
	ForceDeletion                *bool  `plist:",omitempty"`
	DeleteAllUsers               *bool  `plist:",omitempty"`
	RequestType                  string // must be set to "DeleteUser"
	RequestRequiresNetworkTether *bool  `plist:",omitempty"`
}

// DeleteUserCommand is the top-level structure for the "DeleteUser" Apple MDM command.
type DeleteUserCommand struct {
	Command     DeleteUserPayload
	CommandUUID string
}

// GenericCommand creates a new generic command using the values of c.
func (c *DeleteUserCommand) GenericCommand() *GenericCommand {
	cmd := NewGenericCommand(c.Command.RequestType)
	cmd.CommandUUID = c.CommandUUID
	cmd.Command.RequestRequiresNetworkTether = c.Command.RequestRequiresNetworkTether
	return cmd
}

// NewDeleteUserCommand creates a new "DeleteUser" Apple MDM command.
func NewDeleteUserCommand() *DeleteUserCommand {
	return &DeleteUserCommand{Command: DeleteUserPayload{RequestType: DeleteUserRequestType}}
}

func init() {
	// associate our Request Type to a function for creating a command of that type
	newCommandFuncs[DeleteUserRequestType] = func() interface{} {
		return NewDeleteUserCommand()
	}
}

// DeleteUserResponse is the command result report (response) for the "DeleteUser" Apple MDM command.
type DeleteUserResponse struct {
	GenericResponse
}

// GetGenericResponse creates a new generic command response using the values of r.
func (r *DeleteUserResponse) GetGenericResponse() *GenericResponse {
	return &r.GenericResponse
}

func init() {
	// associate our Request Type to a function for creating a response of that type
	newResponseFuncs[DeleteUserRequestType] = func() interface{} {
		return new(DeleteUserResponse)
	}
}

const UserListRequestType = "UserList"

// UserListCommand is the top-level structure for the "UserList" Apple MDM command.
type UserListCommand struct {
	Command     GenericCommandPayload
	CommandUUID string
}

// GenericCommand creates a new generic command using the values of c.
func (c *UserListCommand) GenericCommand() *GenericCommand {
	cmd := NewGenericCommand(c.Command.RequestType)
	cmd.CommandUUID = c.CommandUUID
	cmd.Command.RequestRequiresNetworkTether = c.Command.RequestRequiresNetworkTether
	return cmd
}

// NewUserListCommand creates a new "UserList" Apple MDM command.
func NewUserListCommand() *UserListCommand {
	return &UserListCommand{Command: GenericCommandPayload{RequestType: UserListRequestType}}
}

func init() {
	// associate our Request Type to a function for creating a command of that type
	newCommandFuncs[UserListRequestType] = func() interface{} {
		return NewUserListCommand()
	}
}

type UsersItem struct {
	UserName       string
	FullName       string
	UID            int
	UserGUID       string
	IsLoggedIn     bool
	HasDataToSync  bool
	DataQuota      int
	DataUsed       int
	MobileAccount  bool
	HasSecureToken bool
}

// UserListResponse is the command result report (response) for the "UserList" Apple MDM command.
type UserListResponse struct {
	Users []UsersItem
	GenericResponse
}

// GetGenericResponse creates a new generic command response using the values of r.
func (r *UserListResponse) GetGenericResponse() *GenericResponse {
	return &r.GenericResponse
}

func init() {
	// associate our Request Type to a function for creating a response of that type
	newResponseFuncs[UserListRequestType] = func() interface{} {
		return new(UserListResponse)
	}
}

const LogOutUserRequestType = "LogOutUser"

// LogOutUserCommand is the top-level structure for the "LogOutUser" Apple MDM command.
type LogOutUserCommand struct {
	Command     GenericCommandPayload
	CommandUUID string
}

// GenericCommand creates a new generic command using the values of c.
func (c *LogOutUserCommand) GenericCommand() *GenericCommand {
	cmd := NewGenericCommand(c.Command.RequestType)
	cmd.CommandUUID = c.CommandUUID
	cmd.Command.RequestRequiresNetworkTether = c.Command.RequestRequiresNetworkTether
	return cmd
}

// NewLogOutUserCommand creates a new "LogOutUser" Apple MDM command.
func NewLogOutUserCommand() *LogOutUserCommand {
	return &LogOutUserCommand{Command: GenericCommandPayload{RequestType: LogOutUserRequestType}}
}

func init() {
	// associate our Request Type to a function for creating a command of that type
	newCommandFuncs[LogOutUserRequestType] = func() interface{} {
		return NewLogOutUserCommand()
	}
}

// LogOutUserResponse is the command result report (response) for the "LogOutUser" Apple MDM command.
type LogOutUserResponse struct {
	GenericResponse
}

// GetGenericResponse creates a new generic command response using the values of r.
func (r *LogOutUserResponse) GetGenericResponse() *GenericResponse {
	return &r.GenericResponse
}

func init() {
	// associate our Request Type to a function for creating a response of that type
	newResponseFuncs[LogOutUserRequestType] = func() interface{} {
		return new(LogOutUserResponse)
	}
}

const UnlockUserAccountRequestType = "UnlockUserAccount"

// UnlockUserAccountPayload is the "inner" command-specific payload for the "UnlockUserAccount" Apple MDM command.
type UnlockUserAccountPayload struct {
	UserName                     string
	RequestType                  string // must be set to "UnlockUserAccount"
	RequestRequiresNetworkTether *bool  `plist:",omitempty"`
}

// UnlockUserAccountCommand is the top-level structure for the "UnlockUserAccount" Apple MDM command.
type UnlockUserAccountCommand struct {
	Command     UnlockUserAccountPayload
	CommandUUID string
}

// GenericCommand creates a new generic command using the values of c.
func (c *UnlockUserAccountCommand) GenericCommand() *GenericCommand {
	cmd := NewGenericCommand(c.Command.RequestType)
	cmd.CommandUUID = c.CommandUUID
	cmd.Command.RequestRequiresNetworkTether = c.Command.RequestRequiresNetworkTether
	return cmd
}

// NewUnlockUserAccountCommand creates a new "UnlockUserAccount" Apple MDM command.
func NewUnlockUserAccountCommand() *UnlockUserAccountCommand {
	return &UnlockUserAccountCommand{Command: UnlockUserAccountPayload{RequestType: UnlockUserAccountRequestType}}
}

func init() {
	// associate our Request Type to a function for creating a command of that type
	newCommandFuncs[UnlockUserAccountRequestType] = func() interface{} {
		return NewUnlockUserAccountCommand()
	}
}

// UnlockUserAccountResponse is the command result report (response) for the "UnlockUserAccount" Apple MDM command.
type UnlockUserAccountResponse struct {
	GenericResponse
}

// GetGenericResponse creates a new generic command response using the values of r.
func (r *UnlockUserAccountResponse) GetGenericResponse() *GenericResponse {
	return &r.GenericResponse
}

func init() {
	// associate our Request Type to a function for creating a response of that type
	newResponseFuncs[UnlockUserAccountRequestType] = func() interface{} {
		return new(UnlockUserAccountResponse)
	}
}

const SetAutoAdminPasswordRequestType = "SetAutoAdminPassword"

// SetAutoAdminPasswordPayload is the "inner" command-specific payload for the "SetAutoAdminPassword" Apple MDM command.
type SetAutoAdminPasswordPayload struct {
	GUID                         string
	PasswordHash                 []byte `plist:"passwordHash"`
	RequestType                  string // must be set to "SetAutoAdminPassword"
	RequestRequiresNetworkTether *bool  `plist:",omitempty"`
}

// SetAutoAdminPasswordCommand is the top-level structure for the "SetAutoAdminPassword" Apple MDM command.
type SetAutoAdminPasswordCommand struct {
	Command     SetAutoAdminPasswordPayload
	CommandUUID string
}

// GenericCommand creates a new generic command using the values of c.
func (c *SetAutoAdminPasswordCommand) GenericCommand() *GenericCommand {
	cmd := NewGenericCommand(c.Command.RequestType)
	cmd.CommandUUID = c.CommandUUID
	cmd.Command.RequestRequiresNetworkTether = c.Command.RequestRequiresNetworkTether
	return cmd
}

// NewSetAutoAdminPasswordCommand creates a new "SetAutoAdminPassword" Apple MDM command.
func NewSetAutoAdminPasswordCommand() *SetAutoAdminPasswordCommand {
	return &SetAutoAdminPasswordCommand{Command: SetAutoAdminPasswordPayload{RequestType: SetAutoAdminPasswordRequestType}}
}

func init() {
	// associate our Request Type to a function for creating a command of that type
	newCommandFuncs[SetAutoAdminPasswordRequestType] = func() interface{} {
		return NewSetAutoAdminPasswordCommand()
	}
}

// SetAutoAdminPasswordResponse is the command result report (response) for the "SetAutoAdminPassword" Apple MDM command.
type SetAutoAdminPasswordResponse struct {
	GenericResponse
}

// GetGenericResponse creates a new generic command response using the values of r.
func (r *SetAutoAdminPasswordResponse) GetGenericResponse() *GenericResponse {
	return &r.GenericResponse
}

func init() {
	// associate our Request Type to a function for creating a response of that type
	newResponseFuncs[SetAutoAdminPasswordRequestType] = func() interface{} {
		return new(SetAutoAdminPasswordResponse)
	}
}

const AccountConfigurationRequestType = "AccountConfiguration"

type AutoSetupAdminAccountItem struct {
	ShortName    string  `plist:"shortName"`
	FullName     *string `plist:"fullName,omitempty"`
	PasswordHash *[]byte `plist:"passwordHash,omitempty"`
	Hidden       *bool   `plist:"hidden,omitempty"`
}

// AccountConfigurationPayload is the "inner" command-specific payload for the "AccountConfiguration" Apple MDM command.
type AccountConfigurationPayload struct {
	SkipPrimarySetupAccountCreation     *bool                        `plist:",omitempty"`
	SetPrimarySetupAccountAsRegularUser *bool                        `plist:",omitempty"`
	PrimaryAccountFullName              *string                      `plist:",omitempty"`
	PrimaryAccountUserName              *string                      `plist:",omitempty"`
	DontAutoPopulatePrimaryAccountInfo  *bool                        `plist:",omitempty"`
	LockPrimaryAccountInfo              *bool                        `plist:",omitempty"`
	AutoSetupAdminAccounts              *[]AutoSetupAdminAccountItem `plist:",omitempty"`
	ManagedLocalUserShortName           *string                      `plist:",omitempty"`
	RequestType                         string                       // must be set to "AccountConfiguration"
	RequestRequiresNetworkTether        *bool                        `plist:",omitempty"`
}

// AccountConfigurationCommand is the top-level structure for the "AccountConfiguration" Apple MDM command.
type AccountConfigurationCommand struct {
	Command     AccountConfigurationPayload
	CommandUUID string
}

// GenericCommand creates a new generic command using the values of c.
func (c *AccountConfigurationCommand) GenericCommand() *GenericCommand {
	cmd := NewGenericCommand(c.Command.RequestType)
	cmd.CommandUUID = c.CommandUUID
	cmd.Command.RequestRequiresNetworkTether = c.Command.RequestRequiresNetworkTether
	return cmd
}

// NewAccountConfigurationCommand creates a new "AccountConfiguration" Apple MDM command.
func NewAccountConfigurationCommand() *AccountConfigurationCommand {
	return &AccountConfigurationCommand{Command: AccountConfigurationPayload{RequestType: AccountConfigurationRequestType}}
}

func init() {
	// associate our Request Type to a function for creating a command of that type
	newCommandFuncs[AccountConfigurationRequestType] = func() interface{} {
		return NewAccountConfigurationCommand()
	}
}

// AccountConfigurationResponse is the command result report (response) for the "AccountConfiguration" Apple MDM command.
type AccountConfigurationResponse struct {
	GenericResponse
}

// GetGenericResponse creates a new generic command response using the values of r.
func (r *AccountConfigurationResponse) GetGenericResponse() *GenericResponse {
	return &r.GenericResponse
}

func init() {
	// associate our Request Type to a function for creating a response of that type
	newResponseFuncs[AccountConfigurationRequestType] = func() interface{} {
		return new(AccountConfigurationResponse)
	}
}
